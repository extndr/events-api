name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          pip install --no-cache-dir pytest pytest-cov flake8

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set environment variables for Docker Compose
        run: |
          echo "DB_HOST=db" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
          echo "DB_NAME=postgres" >> $GITHUB_ENV
          echo "DB_USER=postgres" >> $GITHUB_ENV
          echo "DB_PASSWORD=postgres" >> $GITHUB_ENV
          echo "SECRET_KEY=test-secret" >> $GITHUB_ENV
          echo "DJANGO_ENV=local" >> $GITHUB_ENV

      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d --build

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker-compose exec -T db pg_isready -h db -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Run migrations
        run: docker-compose exec web python manage.py migrate

      - name: Run tests with coverage
        run: docker-compose exec web pytest --cov=api --cov-report=term

      - name: Run flake8
        run: docker-compose exec web flake8 .

      - name: Shutdown Docker Compose containers
        run: docker-compose down
